/*
0,1,···,n-1这n个数字排成一个圆圈，从数字0开始，每次从这个圆圈里删除第m个数字（删除后从下一个数字开始计数）。求出这个圆圈里剩下的最后一个数字。
例如，0、1、2、3、4这5个数字组成一个圆圈，从数字0开始每次删除第3个数字，则删除的前4个数字依次是2、0、4、1，因此最后剩下的数字是3。
限制：1 <= n <= 10^5, 1 <= m <= 10^6.
思路：方法一：可以构造一个循环链表来操作，但是该方法时间复杂度O(mn)，空间复杂度为O(n)。方法二：数学规律，具体看书/题解，时间复杂度O(n)，空间复杂度O(1)，其中n为数字个数。
*/
class Solution {
public:
    int lastRemaining(int n, int m) {
        if(n <= 0 || m <= 0)
            return -1;
        int result = 0;
        for(int i = 2; i <= n; i++)
            result = (result + m) % i;
        return result;
    }
};
